[tool.poetry]
name = "ny-taxi-web-service"
version = "0.1.0"
description = "Train and evaluate machine learning models on the NY taxi dataset - model to be deployed as a web service using an AWS SageMaker Endpoint"
authors = ["HichamBenbriqa <hichambenbriqa@gmail.com>"]
readme = "README.md"
packages = [{include = "ny_taxi_web_service"}]

[tool.poetry.dependencies]
python = ">=3.10,<3.13"
scikit-learn = "1.2.2"
python-dotenv = "1.0.0"
awscli = "^1.26.78"
boto3 = "^1.26.78"
pandas = "^2.1.2"
numpy = "^1.26.1"
pyarrow = "^14.0.0"
fastparquet = "^2023.10.1"
hydra-core = "^1.3.2"
neptune = "*"
sagemaker = "^2.202.1"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.3"
deepdiff = "^6.6.1"
requests = "^2.31.0"
hydra-core = "^1.3.2"
ruff = "^0.1.8"
pre-commit = "^3.6.0"
sphinx = "*"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]

# Same as Black.
line-length = 88
indent-width = 4
target-version = "py310"

[tool.ruff.lint]

# Add to this list code of the rules you want Ruff to evaluate your code against, list of the rules here: https://docs.astral.sh/ruff/rules/#pydocstyle-d

select = [
    "A",  # prevent using keywords that clobber python builtins
    "B",  # bugbear: security warnings
    "E",  # pycodestyle
    "F",  # pyflakes
    "D",  # pydocstyle
    "I",  # isort
    "ISC",  # implicit string concatenation
    "UP",  # alert you when better syntax is available in your python version
    "RUF",  # the ruff developer's own rules
]

# ignore the following rules as they represent a conflict when using Ruff as a formatter as well.
ignore = ["E111","E114","E117","D206","D300","ISC001","ISC002","D407", "D212"]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
# List of rule codes that you don't want Ruff to fix when the flag --fix is passed
unfixable = []


[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"
